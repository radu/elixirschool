# பாங்கு பொருத்துதல்

## பொருத்தும் செயல்பாடு

ஓர் ஆச்சரியமான விசயம் தெரியுமா? எலிக்சரில், `=` என்பது உண்மையில் பொருத்தும் செயல்பாடு ஆகும். இயற்கணிதத்தின் சமனிலை குறியீட்டுக்கு ஒப்பானதாக இதைக்கருதலாம். இச்செயல்பாட்டைப்பயன்படுத்தும் கோவை, ஒரு சமன்பாடாக எடுத்துக்கொள்ளப்படுகிறது. அதன் இருபுறமும் உள்ள மதிப்புகளை எலிக்சர் பொருத்திப்பார்க்கிறது. அவையிரண்டும் பொருந்தும் பட்சத்தில், அதன் மதிப்பு திருப்பியனுப்பப்படுகிறது. இல்லையெனில், ஒரு வழுவைத்தருகிறது. ஒரு எடுத்துக்காட்டைப்பார்க்கலாம்:


```elixir
 x = 1
```

மேலுமோர் எளிய எடுத்துக்காட்டை முயன்றுபார்க்கலாம்:


```elixir
 1 = x
```

```elixir
 2 = x
```

நாம் இதுவரையறிந்த தொகுப்புகளுக்கு பாங்குபொருத்திப்பார்க்கலாம்:


```elixir
 list = [1, 2, 3]
```

```elixir
 [1, 2, 3] = list
```

```elixir
 [] = list
```

```elixir
 [1 | tail] = list
```

```elixir
 tail
```

```elixir
 [2 | _] = list
```

```elixir
 {:ok, value} = {:ok, "Successful!"}
```

```elixir
 value
```

```elixir
 {:ok, value} = {:error}
```

## தொங்கவிடும் செயல்பாடு

பொருத்தும் செயல்பாட்டின் இடப்புறம் ஒரு மாறி இருக்குமெனில், வலப்புறமுள்ள மதிப்பு அம்மாறிக்கு வழங்கப்படுகிறது. சிலசமயங்களில் இச்செயல்பாடு தேவையற்றது. அச்சமயங்களில் நாம் `^` என்று குறிக்கப்படும் தொங்கவிடும் செயல்பாட்டைப்பயன்படுத்தலாம்.

ஒரு மாறியைத்தொங்கவிடும்போது, அதன் மதிப்பை பாங்குபொருத்துவதற்கு எடுத்துக்கொள்கிறோம். ஒரு எடுத்துக்காட்டைப்பார்க்கலாம்:


```elixir
 x = 1
```

```elixir
 ^x = 2
```

```elixir
 {x, ^x} = {2, 1}
```

```elixir
 x
```

எலிக்சரின் 1.2 பதிப்பில், மேப்புகளின் திறவுச்சொற்களையும், செயற்கூற்றின் உருபுகளையும் கூட தொங்கவிடமுடியும்:


```elixir
 key = "hello"
```

```elixir
 %{^key => value} = %{"hello" => "world"}
```

```elixir
 value
```

```elixir
 %{^key => value} = %{:hello => "world"}
```

செயற்கூற்றின் உருபுகளைத்தொங்கவிடுவதற்கான எடுத்துக்காட்டு:


```elixir
 greeting = "Hello"
```

```elixir
 greet = fn
```

```elixir
 greet.("Hello", "Sean")
```

```elixir
 greet.("Mornin'", "Sean")
```
